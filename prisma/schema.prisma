generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Task {
  id            String    @id @default(cuid())
  description   String
  createdDate   DateTime  @default(now()) @map("created_date")
  dueDate       DateTime  @default(now()) @map("due_date")
  responsibleId String    @map("responsible_id")
  createdById   String    @map("createdBy_Id")
  statusId      String    @map("status_id")
  priorityId    String    @map("priority_id")
  dashboardId   String    @map("dashboard_id")
  createdBy     Users     @relation("CreatedBy", fields: [createdById], references: [id])
  dashboard     Dashboard @relation(fields: [dashboardId], references: [id])
  priority      Priority  @relation(fields: [priorityId], references: [id])
  responsible   Users     @relation("Responsible", fields: [responsibleId], references: [id])
  status        Status    @relation(fields: [statusId], references: [id])
}

model Users {
  id            String          @id @default(cuid())
  username      String          @unique
  password      String
  role          String
  createdDate   DateTime        @default(now()) @map("created_date")
  lastModified  DateTime        @default(now()) @map("last_modified")
  lastLoginDate DateTime        @default(now()) @map("last_login_date")
  statusId      String          @map("status_id")
  satus         UserStatus      @relation(fields: [statusId], references: [id])
  dashboards    Dashboard[]
  dashboardUser DashboardUser[]
  CreatedBy     Task[]          @relation("CreatedBy")
  Responsible   Task[]          @relation("Responsible")
}

model Dashboard {
  id            String          @id @default(cuid())
  name          String
  ownerId       String          @map("owner_id")
  owner         Users           @relation(fields: [ownerId], references: [id])
  dashboardUser DashboardUser[]
  tasks         Task[]
}

model DashboardUser {
  id          String    @id @default(cuid())
  userId      String    @map("user_id")
  dashboardId String    @map("dashboard_id")
  createdDate DateTime  @default(now()) @map("created_date")
  updatedDate DateTime  @default(now()) @map("updated_date")
  dashboard   Dashboard @relation(fields: [dashboardId], references: [id])
  user        Users     @relation(fields: [userId], references: [id])
}

model Status {
  id          String @id @default(cuid())
  description String
  tasks       Task[]
}

model Priority {
  id          String @id @default(cuid())
  description String
  tasks       Task[]
}

model UserStatus {
  id          String @id @default(cuid())
  description String
  users       Users[]
}
